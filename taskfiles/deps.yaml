version: "3"

vars:
  G_INSTALL_EMSDK_CHECKSUM: "{{.G_BUILD_DIR}}/install-emsdk.md5"
  G_ZSTD_OUTPUT_DIR: "{{.G_DEPS_DIR}}/zstd-src"

tasks:
  default:
    desc: "Install all dependencies."
    vars:
      CHECKSUM_FILE: "{{.G_DEPS_CHECKSUM}}"
      OUTPUT_DIR: "{{.G_DEPS_DIR}}"
    sources:
      - "{{.G_INSTALL_EMSDK_CHECKSUM}}"
      - "{{.ROOT_DIR}}/taskfile.yaml"
      - "{{.TASKFILE}}"
    generates: ["{{.CHECKSUM_FILE}}"]
    run: "once"
    deps:
      - "install-emsdk"
      - task: ":utils:checksum:validate"
        vars:
          CHECKSUM_FILE: "{{.CHECKSUM_FILE}}"
          INCLUDE_PATTERNS: ["{{.OUTPUT_DIR}}"]
    cmds:
      - task: ":utils:cmake:install-deps-and-generate-settings"
        vars:
          CMAKE_SETTINGS_DIR: "{{.G_DEPS_CMAKE_SETTINGS_DIR}}"
          CMAKE_SETTINGS_FILE: "{{.G_DEPS_CMAKE_SETTINGS_FILE}}"
          DEP_TASK: "deps:install-all"
      # This command must be last
      - task: ":utils:checksum:compute"
        vars:
          CHECKSUM_FILE: "{{.CHECKSUM_FILE}}"
          INCLUDE_PATTERNS: ["{{.OUTPUT_DIR}}"]

  clean:
    cmds:
      - task: "clean-emsdk"
      - "rm -rf '{{.G_DEPS_DIR}}'"

  clean-emsdk:
    cmds:
      - "rm -rf '{{.G_EMSDK_DIR}}'"

  install-all:
    internal: true
    deps:
      - "install-zstd-single-file-lib"

  install-emsdk:
    vars:
      CHECKSUM_FILE: "{{.G_INSTALL_EMSDK_CHECKSUM}}"
      EMSDK_VERSION: "4.0.14"
      OUTPUT_DIR: "{{.G_EMSDK_DIR}}"
    sources:
      - "{{.ROOT_DIR}}/Taskfile.yml"
      - "{{.TASKFILE}}"
    generates: ["{{.CHECKSUM_FILE}}"]
    run: "once"
    deps:
      - ":init"
      - task: ":utils:checksum:validate"
        vars:
          CHECKSUM_FILE: "{{.CHECKSUM_FILE}}"
          EXCLUDE_PATTERNS: &emsdk_checksum_exclude_paths
            - "upstream/emscripten/__pycache__"
            - "upstream/emscripten/cache"
            - "upstream/emscripten/third_party/leb128/__pycache__"
            - "upstream/emscripten/tools/__pycache__"
            - "upstream/emscripten/tools/ports/__pycache__"
            - "upstream/emscripten/tools/ports/contrib/__pycache__"
          INCLUDE_PATTERNS: ["{{.OUTPUT_DIR}}"]
    cmds:
      - task: "clean-emsdk"
      - "git clone https://github.com/emscripten-core/emsdk.git '{{.G_EMSDK_DIR}}'"
      - |-
        cd "{{.G_EMSDK_DIR}}"
        ./emsdk install {{.EMSDK_VERSION}}
        ./emsdk activate {{.EMSDK_VERSION}}
      - |-
        cd "{{.G_EMSDK_DIR}}/upstream/emscripten"
        PATH=$(echo {{.G_EMSDK_DIR}}/node/*/bin):$PATH npm install
      # This command must be last
      - task: ":utils:checksum:compute"
        vars:
          CHECKSUM_FILE: "{{.CHECKSUM_FILE}}"
          EXCLUDE_PATTERNS: *emsdk_checksum_exclude_paths
          INCLUDE_PATTERNS: ["{{.OUTPUT_DIR}}"]

  download-zstd:
    internal: true
    vars:
      LIB_NAME: "zstd"
    run: "once"
    cmds:
      - task: ":utils:remote:download-and-extract-tar"
        vars:
          FILE_SHA256: "37d7284556b20954e56e1ca85b80226768902e2edabd3b649e9e72c0c9012ee3"
          OUTPUT_DIR: "{{.G_ZSTD_OUTPUT_DIR}}"
          URL: "https://github.com/facebook/zstd/archive/refs/tags/v1.5.7.tar.gz"

  install-zstd-single-file-lib:
    internal: true
    vars:
      LIB_NAME: "zstd-single-file"
      ZSTD_SINGLE_FILE_OUTPUT_DIR: "{{.G_DEPS_DIR}}/zstd-single-file"
      ZSTD_SINGLE_FILE_OUTPUT_FILE: "{{.ZSTD_SINGLE_FILE_OUTPUT_DIR}}/zstd.c"
      ZSTD_WASM_CMAKE_FILE: "{{.G_DEPS_CMAKE_SETTINGS_DIR}}/{{.LIB_NAME}}.cmake"
    sources:
      - "{{.G_DEPS_DIR}}/zstd-src.md5"
    generates:
      - "{{.ZSTD_SINGLE_FILE_OUTPUT_FILE}}"
      - "{{.ZSTD_WASM_CMAKE_FILE}}"
    deps:
      - "download-zstd"
    cmds:
      - "mkdir -p '{{.G_DEPS_DIR}}/zstd-single-file'"
      - |-
        cd {{.G_ZSTD_OUTPUT_DIR}}/build/single_file_libs
        python3 combine.py \
        -r ../../lib -x legacy/zstd_legacy.h \
        -o {{.ZSTD_SINGLE_FILE_OUTPUT_FILE}} \
        zstd-in.c
      - >-
        echo "set(
        ZSTD_WASM_ZSTD_SINGLE_FILE_SOURCE_DIRECTORY \"{{.ZSTD_SINGLE_FILE_OUTPUT_DIR}}\"
        )" > "{{.ZSTD_WASM_CMAKE_FILE}}"
